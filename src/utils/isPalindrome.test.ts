import { isPalindrome } from "./isPalindrome";

describe.skip("isPalindrome", () => {
  it("returns true for empty string", () => {
    expect(isPalindrome("")).toBe(true);
  });

  it("returns true for madam", () => {
    expect(isPalindrome("madam")).toBe(true);
  });

  it("returns true for Madam", () => {
    expect(isPalindrome("Madam")).toBe(true);
  });

  it("returns true for Was it a car or a cat I saw", () => {
    expect(isPalindrome("Was  it a car  or a cat I saw")).toBe(true);
  });

  it("returns false for Incubyte", () => {
    expect(isPalindrome("Incubyte")).toBe(false);
  });

  it("returns true for ‚úåüèª", () => {
    expect(isPalindrome("‚úåüèª")).toBe(true);
  });

  it("returns false for ‚úåüèªüëÄ", () => {
    expect(isPalindrome("‚úåüèªüëÄ")).toBe(false);
  });
  it("returns true for ‰∏äÊµ∑Ëá™‰æÜÊ∞¥‰æÜËá™Êµ∑‰∏ä", () => {
    expect(isPalindrome("‰∏äÊµ∑Ëá™‰æÜÊ∞¥‰æÜËá™Êµ∑‰∏ä")).toBe(true);
  });
  it("returns true for ‰∏äÊµ∑ÁöÑËá™‰æÜÊ∞¥‰æÜËá™Êµ∑‰∏ä", () => {
    expect(isPalindrome("‰∏äÊµ∑ÁöÑËá™‰æÜÊ∞¥‰æÜËá™Êµ∑‰∏ä")).toBe(false);
  });
  it.skip("returns true for Eine g√ºldne, gute Tugend: L√ºge nie!", () => {
    expect(isPalindrome("Eine g√ºldne, gute Tugend: L√ºge nie!")).toBe(true);
  });
});
